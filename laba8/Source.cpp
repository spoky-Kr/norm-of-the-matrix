/*
Лабораторная работа №8 по теме "Защита от ошибок"
по профессиональному модулю МДК 03.01
Технология разработки программного обеспечения
Название программы: sravn_norm
Разработал: Крапивкин Вячеслав Анатольевич
Язык программирования: C++

Постановка задачи:
заданы три матрицы

    1   2   3          -2.5  7          3   4  -8.2
A = 4 -5.1  6 ;    B =   8   9 ;    C = 7   1    2
    7   8   9                           6   5    8

Найти минимальное из трех чисел x, y, z, где x есть
первая норма матрицы А, y - первая норма матрицы B,
z - первая норма матрицы C.
Первой нормой матрицы A называется число:

Вычисление нормы матрицы оформить в виде подпрограммы 
типа fuction (функции).
Переменные, используемые в программе:
a - матрица А;
b - матрица В;
c - матрица С;
x - первая норма матрицы А;
y - первая норма матрицы В;
z - первая норма матрицы С;
n - размерность матрицы А;
m - размерность матрицы В;
l - размерность матрицы С;
i - счетчик цикла.
	*/
#include <iostream>
#include <iomanip>
using namespace std;

/*vvod - процедура ввода матрицы.
Формальные параметры:
matr - передаваемая матрица;
n - размерность матрицы.
Локальные переменные:
x - введенное значение элемента матрицы;
i - счетчик цикла;
j - счетчик цикла.
*/
void vvod(double** matr, int n) {

	double x;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cout << "matr[" << i + 1 << "][" << j + 1 << "]= ";
			cin >> x;                                      //Провека введенного
			while (x < -100 || x>100) {                    //элемента матрицы
				cout << "Введено недопустимое значение элемента, повторите ввод:" << endl;
				cout << "matr[" << i + 1 << "][" << j + 1 << "]= ";
				cin >> x;
			}
			matr[i][j] = x;
		}
	}
}

/*vivod - процедура вывода матрицы.
Формальные параметры:
matr - передаваемая матрица;
n - размерность матрицы.
Локальные переменные:
m - индекс элемента матрицы;
i - счетчик цикла;
j -счетчик цикла.
*/
void vivod(double** matr, int n) {
	cout << endl;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cout << setw(7) << matr[i][j];
		}
		cout << endl;
	}
	cout << endl;
}

/*norma - функция вычисления первой нормы матрицы.
Формальные параметры:
matr - передаваемая матрица;
n - размерность матрицы.
Локальные переменные:
m - индекс элемента матрицы;
max - максимальный сумма элементов строки;
sum - сумма элементов строки;
i - счетчик цикла;
j - счетчик цикла.
*/
double norma(double** matr, int n) {
	double max = 0;
	double sum = 0;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			sum = sum + abs(matr[i][j]);          // Вычисление суммы элементов строки                        // Увеличение индекса матрицы на 1
		}
		if (sum > max) {                       // Нахождение максимальной суммы
			max = sum;                         // элементов строки
		}
		sum = 0;
	}
	return max;
}

/*
proverka - функция проверки размерности матрицы.
Формальный параметр:
n - размерность матрицы.
*/
double proverka(int n) {
	
	while (n < 2 || n>8) {                                            //Проверка введенной
		cout << "Указана недопустимая размерность, повторите ввод: "; //размерности матрицы
		cin >> n;
	}
	return n;
}

int main() {
	setlocale(LC_ALL, "Russian");                            // Инициализация и объявление
	int n, m, l;
	cout << "Введите размерность мартиц(2-8): "<<endl;
	cout << "Размерность матрицы А: ";
	cin >> n;
	n=proverka(n);
	cout << endl;
	cout << "Размерность матрицы B: ";
	cin >> m;
	m=proverka(m);
	cout << endl;
	cout << "Размерность матрицы C: ";
	cin >> l;
	l=proverka(l);
	cout << endl;

	
	double** a = new double*[n];
	double** b = new double*[m];
	double** c = new double*[l];
	for (int i = 0; i < n; i++) {
		a[i] = new double[n];
	}
	for (int i = 0; i < m; i++) {
		b[i] = new double[m];
	}
	for (int i = 0; i < l; i++) {
		c[i] = new double[l];
	}

	cout << "Ввод матрицы A:" << endl;
	vvod(a, n);
	cout << "Ввод матрицы B:" << endl;
	vvod(b, m);
	cout << "Ввод матрицы C:" << endl;
	vvod(c, l);

	cout << "Матрица А: " << endl;                           // Вывод матриц посредством
	vivod(a, n);                                             // вызова процедуры
	cout << "Матрица B: " << endl;
	vivod(b, m);
	cout << "Матрица C: " << endl;
	vivod(c, l);

	double x = norma(a, n);                                  // Вычисление первой нормы 
	double y = norma(b, m);                                  // каждой матрицы посредством
	double z = norma(c, l);                                  // вызова процедуры
	cout << "Первая норма матрицы А: " << x << endl;
	cout << "Первая норма матрицы B: " << y << endl;
	cout << "Первая норма матрицы C: " << z << endl << endl;

	if ((x < y) && (x < z)){                                 // Нахождение минимальной
		cout << "Минимальная норма матрицы равна " << x;     // нормы
    }
	if ((y < x) && (y < z)) {
		cout << "Минимальная норма матрицы равна " << y;
	}
	if ((z < x) && (z < y)) {
		cout << "Минимальная норма матрицы равна " << z;
	}
}